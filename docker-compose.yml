version: "3"

services:
  apartment-service:
    container_name: apartment-service
    image: every-apart-apartment-service:0.0.1
    ports:
      - "8080:8080"
      - "5006:5006"
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=*:5006,server=y,suspend=n"
      EVERYAPART_GOOPENAPI_ACCESSKEY: ${EVERYAPART_GOOPENAPI_ACCESSKEY}
      SPRING_DATASOURCE_URL : "jdbc:postgresql://apartment-db:5432/everyapart"
      SPRING_DATASOURCE_USERNAME : "postgres"
      SPRING_DATASOURCE_PASSWORD : "postgres"
      SPRING_DATASOURCE_DRIVERCLASSNAME: "org.postgresql.Driver"
    depends_on:
      - apartment-db

  region-service:
    container_name: region-service
    image: every-apart-region-service:0.0.1-SNAPSHOT
    ports:
      - "8081:8080"
      - "5001:5001"
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=*:5001,server=y,suspend=n"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://region-db:5432/everyapart"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "postgres"
      SPRING_DATASOURCE_DRIVERCLASSNAME: "org.postgresql.Driver"
    depends_on:
      - region-db

  membership-service:
    container_name: membership-service
    image: every-apart-membership-service:0.0.1-SNAPSHOT
    ports:
      - "8082:8080"
      - "5002:5002"
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=*:5002,server=y,suspend=n"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://membership-db:5432/everyapart"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "postgres"
      SPRING_DATASOURCE_DRIVERCLASSNAME: "org.postgresql.Driver"
      SPRING_JPA_HIBERNATE_DDL-AUTO: "update"
    depends_on:
      - membership-db

  subscription-service:
    container_name: subscription-service
    image: every-apart-subscription-service:0.0.1-SNAPSHOT
    ports:
      - "8083:8080"
      - "5003:5003"
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=*:5003,server=y,suspend=n"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://subscription-db:5432/everyapart"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "postgres"
      SPRING_DATASOURCE_DRIVERCLASSNAME: "org.postgresql.Driver"
      SPRING_JPA_HIBERNATE_DDL-AUTO: "update"
      SERVICE_MEMBERSHIP_URL: "http://membership-service:8080"
      SERVICE_REGION_URL: "http://region-service:8080"
    depends_on:
      - subscription-db
      - membership-service
      - region-service

  batch-service:
    container_name: batch-service
    image: every-apart-batch-service:0.0.1-SNAPSHOT
    ports:
      - "8084:8080"
      - "5004:5004"
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=*:5004,server=y,suspend=n"
      SERVICE_APARTMENTTRANSACTION_URL: "http://apartment-service:8080"
      SERVICE_SUBSCRIPTION_URL: "http://subscription-service:8080"
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: "everyapart-kafka:9092"
      EVERYAPART_KAFKA_TOPIC_MAIL: "everyapart.mail.send"
    depends_on:
      - everyapart-kafka
      - membership-service
      - region-service
      - subscription-service

  mail-service:
    container_name: mail-service
    image: every-apart-mail-service:0.0.1-SNAPSHOT
    ports:
      - "8085:8080"
      - "5005:5005"
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=*:5005,server=y,suspend=n"
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: "everyapart-kafka:9092"
      EVERYAPART_KAFKA_TOPIC_MAIL: "everyapart.mail.send"
      SPRING_MAIL_HOST: "smtp.gmail.com"
      SPRING_MAIL_PORT: "587"
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
    depends_on:
      - everyapart-kafka

  everyapart-zookeeper:
    container_name: everyapart-zookeeper
    image: 'arm64v8/zookeeper:3.8'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_TLS_CLIENT_AUTH=none
      - ZOO_TLS_QUORUM_CLIENT_AUTH=none
  everyapart-kafka:
    image: wurstmeister/kafka
    container_name: everyapart-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME}
      KAFKA_ZOOKEEPER_CONNECT: everyapart-zookeeper:2181
    volumes:
      - everyapart-kafka-volume:/kafka
    depends_on:
      - everyapart-zookeeper
  everyapart-kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: everyapart-kafka-ui
    ports:
      - "8989:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=everyapart-kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=everyapart-zookeeper:2181
    depends_on:
      - everyapart-kafka
      - everyapart-zookeeper


  apartment-db:
    image: postgres:latest
    container_name: apartment-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "everyapart"
      SPRING_PROFILES_ACTIVE: "dev"
    volumes:
      - apartment-db-volume:/var/lib/postgresql/data
  region-db:
    image: postgres:latest
    container_name: region-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "everyapart"
    volumes:
      - region-db-volume:/var/lib/postgresql/data
  membership-db:
    image: postgres:latest
    container_name: membership-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "everyapart"
    volumes:
      - everyapart-membership-db-volume:/var/lib/postgresql/data
  subscription-db:
    image: postgres:latest
    container_name: subscription-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "everyapart"
    volumes:
      - everyapart-subscription-db-volume:/var/lib/postgresql/data

volumes:
  apartment-db-volume:
    external: true
  region-db-volume:
    external: true
  everyapart-membership-db-volume:
    external: true
  everyapart-kafka-volume:
    external: true
  everyapart-subscription-db-volume:
    external: true

